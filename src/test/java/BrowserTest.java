import java.io.File;
import java.time.Duration;

import org.apache.commons.mail.DefaultAuthenticator;
import org.apache.commons.mail.EmailAttachment;
import org.apache.commons.mail.EmailException;
import org.apache.commons.mail.MultiPartEmail;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.edge.EdgeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.testng.Assert;
import org.testng.annotations.AfterClass;
import org.testng.annotations.AfterSuite;
import org.testng.annotations.BeforeSuite;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Parameters;
import io.github.bonigarcia.wdm.WebDriverManager;

public class BrowserTest {

	WebDriver driver = null;

	@BeforeSuite(description = "Performing Browser launching operation")
	@Parameters("BrowserName")
	public void initsuit(String BrowserName) {
		System.out.println("Browser name is : " + BrowserName); // printing browser name

		// To run our test through chromedriver
		if (BrowserName.equalsIgnoreCase("Chrome")) {
			WebDriverManager.chromedriver().setup();
			Configreader config = new Configreader();
			driver = new ChromeDriver();
			driver.get(config.getURL());
			driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
		}
		// To run our test through Firefoxdriver
		else if (BrowserName.equalsIgnoreCase("Firefox")) {
			WebDriverManager.firefoxdriver().setup();
			Configreader config = new Configreader();
			driver = new FirefoxDriver();
			driver.get(config.getURL());
			driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
		}
		// To run our test through Edgedriver
		else if (BrowserName.equalsIgnoreCase("Edge")) {
			WebDriverManager.edgedriver().setup();
			Configreader config = new Configreader();
			driver = new EdgeDriver();
			driver.get(config.getURL());
			driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));

		}

	}

	@BeforeTest(description = "Performing some essentials before tesing application")
	public void basics() {
		// maximizing the browser window
		driver.manage().window().maximize();
		// Deleting all cookies on browser before executing test
		driver.manage().deleteAllCookies();

		// To get title of the website
		String Webtitle = driver.getTitle();
		System.out.println("The title of Amazon website is :" + Webtitle);
		Assert.assertEquals(Webtitle,
				"Online Shopping site in India: Shop Online for Mobiles, Books, Watches, Shoes and More - Amazon.in");
	}

	@AfterClass
       public void afterclass() throws EmailException {

		// Create the attachment
		EmailAttachment attachment = new EmailAttachment();
		String localpath = System.getProperty("user.dir");
		String path1 = localpath + "/test-output/emailable-report.html";
		String path2 = localpath + "/test-output/index.html";
		attachment.setPath(path1);
		attachment.setPath(path2);
		attachment.setDisposition(EmailAttachment.ATTACHMENT);
		attachment.setDescription("*** Test Execution Results ***");
		attachment.setName("Autogenerated_Test_Execution_Reports");

		// Create the email message
		MultiPartEmail email = new MultiPartEmail();
		Configreader config=new Configreader();
		email.setHostName("smtp.googlemail.com");
		email.setSmtpPort(465);
		email.setAuthenticator(new DefaultAuthenticator(config.getgmailuser1(),config.getgmailpass()));
		email.setSSLOnConnect(true);
		email.addTo(config.getgmailuser3(), "Kuldeep Jasani");
		email.addTo(config.getgmailuser2(), "Hemdip Badani");
		email.addTo(config.getgmailuser4(), "Ritesh Ranjan");
		email.addTo(config.getgmailuser1(), "Aditya Patki");
		email.setFrom(config.getgmailuser1(), "Me");
		email.setSubject("Autogenerated_Test_Execution_Reports");
		email.setMsg("Hi Everyone, please find the autogenerated test execution reports in the attachment");

		// add the attachment
		email.attach(new File(path1));
        email.attach(new File(path2));
		// send the email
		email.send();
	}

	@AfterSuite
	public void teardown() {
		driver.quit(); // closing all browser instances
	}

}
